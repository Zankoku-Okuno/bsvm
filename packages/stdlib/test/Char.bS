.entrypoint &main

.func main
  .reg fp
  strm fp, 1
  jal &test.isAlpha, fp
  jal &test.isAlphaNum, fp
  jal &test.in, fp
  mov %0, 0
  exit %0

.func test.isAlpha, fp
  .reg c, i
  mov i, 0
  @loop:
    jal &Char.isAlpha, i
    into c
    zjmp c, @loop.continue
    putb fp, i
  @loop.continue:
  bl c, i, 256
  zjmp c, @loop.done
  add i, 1
  jmp @loop
  @loop.done:
  jar &Print.nl, fp

.func test.isAlphaNum, fp
  .reg c, i
  mov i, 0
  @loop:
    jal &Char.isAlphaNum, i
    into c
    zjmp c, @loop.continue
    putb fp, i
  @loop.continue:
  bl c, i, 256
  zjmp c, @loop.done
  add i, 1
  jmp @loop
  @loop.done:
  jar &Print.nl, fp

.func test.in, fp
  .reg set
  lia set, @set
  .reg c, i
  mov i, 0
  @loop:
    jal &Char.in, i, set
    into c
    zjmp c, @loop.continue
    putb fp, i
  @loop.continue:
  bl c, i, 256
  zjmp c, @loop.done
  add i, 1
  jmp @loop
  @loop.done:
  jar &Print.nl, fp
@set:
.ascii '@._-',0