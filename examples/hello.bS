; .shebang /usr/bin/env bsvm

.func main
  ;;; setup
  .reg fp = %0, _, strlen, strbytes
  .reg t1 = %1
  strm %0, 1
  ;;; put the first part of the string
    ; load string and compute bounds
    lia strbytes, &hello.start
    lia strlen, &hello.end
    sub strlen, strbytes
    ; write msg to stdout
    lea t1, strlen
    put fp, t1
  ;;; determine the name to use (default "world")
    ; load default string and compute bounds
    lia strbytes, &world.start
    lia strlen, &world.end
    sub strlen, strbytes
    ; if there is an argument, load it instead
    argc t1
    lt t1, t1, 2
    cjmp t1, @name-loaded
    mov t1, 1
    lea strlen, strlen
    argv strlen, t1
@name-loaded:
  ;;; put the name
    lea t1, strlen
    put fp, t1
  ;;; put the final part of the string
    mov t1, 33 ; exclam
    putb fp, t1
    mov t1, 10 ; newline
    putb fp, t1
  mov t1, 0
  exit t1


hello.start:
.ascii 'Hello, '
hello.end:
.ascii 0

world.start:
.ascii 'world'
world.end:
.ascii 0
