.entrypoint &main
.func main
  .reg c, fp, char, buf
  .reg t1
  ;;; buf = ByteBuf.new(4)
  mov t1, 4
  jal &ByteBuf.new, t1
  into buf
  zjmp buf, @nomem
  ;;; fp = stdin
  strm fp, 0
  ;;; do {
  @loop:
    ;;; char = getc(fp)
    getb char, fp
    ;;; while char != EOF
    eq c, char, 256
    cjmp c, @loop.end
    ;;; ByteBuf.append(buf, char)
    lia t1, @nomem
    jal &ByteBuf.append, buf, char,  t1
  ;;; }
    jmp @loop
  @loop.end:
  ;;; fp = stdout
  strm fp, 1
  ;;; fwrite(fp, &buf.lenstr)
  mov t1, buf
  off t1, $ByteBuf.lenstr
  put fp, t1
  ;;; exit(0)
  jal &ByteBuf.del, buf
  mov %0, 0
  exit %0
@nomem:
  ;;; exit(1)
  mov %0, 1
  exit %0